.row {
    max-width: $grid-width;
    margin: 0 auto; /*trick to center a block element inside of another block element*/
    /*margin-bottom: 8rem;

    &:last-child {
        margin-bottom: 0;
    }*/
    &:not(:last-child){
        margin-bottom: $gutter-vertical; /*te ahorras código*/
    }

    @include clearfix;
    /*&:after{ //se inserta desde css como último hijo del elemento
        // clearfix hack to avoid row has 0px width
        content: "";
        display: table;
        clear: both;
    } //Esta parte se pasa al @mixin y se recupera en clearfix*/


    [class^="col-"] {
        //attribute selector
        float: left;
        &:not(:last-child){
            margin-right: $gutter-horizontal; /*las columnas son hijas de row, y la última no necesita margen*/
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) /4);
    }

    .col-2-of-3 {
        //dos veces 1 de 3 mas un margen
        width: calc(((100% - 2 * #{$gutter-horizontal}) / 3) * 2 + #{$gutter-horizontal});
    }

    .col-2-of-4{
        //dos veces uno de cuatro mas dos margenes
        width: calc(((100% - 3 * #{$gutter-horizontal}) /4) * 2 + #{$gutter-horizontal});
    }

    .col-3-of-4{
        //tres veces uno de cuatro mas dos margenes
        width: calc(((100% - 3 * #{$gutter-horizontal}) /4) * 3 + 2 * #{$gutter-horizontal});
    }
}

